// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: funding_service.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// An empty request
type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyContext *KeyContext `protobuf:"bytes,1,opt,name=key_context,json=keyContext,proto3" json:"key_context,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetBalanceRequest) GetKeyContext() *KeyContext {
	if x != nil {
		return x.KeyContext
	}
	return nil
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetBalanceResponse) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type AddFundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fund *Fund `protobuf:"bytes,1,opt,name=fund,proto3" json:"fund,omitempty"`
}

func (x *AddFundRequest) Reset() {
	*x = AddFundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFundRequest) ProtoMessage() {}

func (x *AddFundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFundRequest.ProtoReflect.Descriptor instead.
func (*AddFundRequest) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddFundRequest) GetFund() *Fund {
	if x != nil {
		return x.Fund
	}
	return nil
}

// An empty response
type AddFundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddFundResponse) Reset() {
	*x = AddFundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFundResponse) ProtoMessage() {}

func (x *AddFundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFundResponse.ProtoReflect.Descriptor instead.
func (*AddFundResponse) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{3}
}

type GetFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputValue       uint64      `protobuf:"varint,1,opt,name=output_value,json=outputValue,proto3" json:"output_value,omitempty"`                     // The amount of money (in satoshis) to be spent in the target transaction.
	DataBytes         uint64      `protobuf:"varint,2,opt,name=data_bytes,json=dataBytes,proto3" json:"data_bytes,omitempty"`                           // The length (in bytes) of the data (OP_RETURN) part(s) in the target transaction.
	TotalP2PkhOutputs uint64      `protobuf:"varint,3,opt,name=total_p2pkh_outputs,json=totalP2pkhOutputs,proto3" json:"total_p2pkh_outputs,omitempty"` // The total number of P2PKH outputs in the target transaction.
	TotalDataOutputs  uint64      `protobuf:"varint,4,opt,name=total_data_outputs,json=totalDataOutputs,proto3" json:"total_data_outputs,omitempty"`    // The total number of data (OP_RETURN) outputs in the target transaction.
	MinP2PkhInputs    uint64      `protobuf:"varint,5,opt,name=min_p2pkh_inputs,json=minP2pkhInputs,proto3" json:"min_p2pkh_inputs,omitempty"`          // The minimum number of P2PKH inputs in the target transaction.
	KeyContext        *KeyContext `protobuf:"bytes,6,opt,name=key_context,json=keyContext,proto3" json:"key_context,omitempty"`                         // The override alias we want to get the funds for
}

func (x *GetFundsRequest) Reset() {
	*x = GetFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFundsRequest) ProtoMessage() {}

func (x *GetFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFundsRequest.ProtoReflect.Descriptor instead.
func (*GetFundsRequest) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetFundsRequest) GetOutputValue() uint64 {
	if x != nil {
		return x.OutputValue
	}
	return 0
}

func (x *GetFundsRequest) GetDataBytes() uint64 {
	if x != nil {
		return x.DataBytes
	}
	return 0
}

func (x *GetFundsRequest) GetTotalP2PkhOutputs() uint64 {
	if x != nil {
		return x.TotalP2PkhOutputs
	}
	return 0
}

func (x *GetFundsRequest) GetTotalDataOutputs() uint64 {
	if x != nil {
		return x.TotalDataOutputs
	}
	return 0
}

func (x *GetFundsRequest) GetMinP2PkhInputs() uint64 {
	if x != nil {
		return x.MinP2PkhInputs
	}
	return 0
}

func (x *GetFundsRequest) GetKeyContext() *KeyContext {
	if x != nil {
		return x.KeyContext
	}
	return nil
}

type GetFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Funds       []*Fund  `protobuf:"bytes,1,rep,name=funds,proto3" json:"funds,omitempty"`                                   // A list of funds.
	Change      *Payment `protobuf:"bytes,2,opt,name=change,proto3" json:"change,omitempty"`                                 // A Payment type (address + satoshis) to be used to send the change left over back to.
	StdFeePaid  uint64   `protobuf:"varint,3,opt,name=std_fee_paid,json=stdFeePaid,proto3" json:"std_fee_paid,omitempty"`    // The fees paid for the standard fee type.
	DataFeePaid uint64   `protobuf:"varint,4,opt,name=data_fee_paid,json=dataFeePaid,proto3" json:"data_fee_paid,omitempty"` // The fees paid for the data fee type.
}

func (x *GetFundsResponse) Reset() {
	*x = GetFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFundsResponse) ProtoMessage() {}

func (x *GetFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFundsResponse.ProtoReflect.Descriptor instead.
func (*GetFundsResponse) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetFundsResponse) GetFunds() []*Fund {
	if x != nil {
		return x.Funds
	}
	return nil
}

func (x *GetFundsResponse) GetChange() *Payment {
	if x != nil {
		return x.Change
	}
	return nil
}

func (x *GetFundsResponse) GetStdFeePaid() uint64 {
	if x != nil {
		return x.StdFeePaid
	}
	return 0
}

func (x *GetFundsResponse) GetDataFeePaid() uint64 {
	if x != nil {
		return x.DataFeePaid
	}
	return 0
}

type SpendFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx []byte `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"` // This is an array of bytes containing the bitcoin transaction itself.
}

func (x *SpendFundsRequest) Reset() {
	*x = SpendFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpendFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpendFundsRequest) ProtoMessage() {}

func (x *SpendFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpendFundsRequest.ProtoReflect.Descriptor instead.
func (*SpendFundsRequest) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{6}
}

func (x *SpendFundsRequest) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

type SpendFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid   string            `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`                                   // The transaction ID of the transaction that was successfully written to the bitcoin node.
	Status TransactionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=proto.TransactionStatus" json:"status,omitempty"` // The status of the tx submitted in the broadcast request
}

func (x *SpendFundsResponse) Reset() {
	*x = SpendFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpendFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpendFundsResponse) ProtoMessage() {}

func (x *SpendFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpendFundsResponse.ProtoReflect.Descriptor instead.
func (*SpendFundsResponse) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{7}
}

func (x *SpendFundsResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *SpendFundsResponse) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_FAILURE
}

type AddAndSplitFundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Txid         string      `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`                               // The txid of the tx containing the fund to split.
	Denomination uint64      `protobuf:"varint,2,opt,name=denomination,proto3" json:"denomination,omitempty"`              // The size of the split transactions (satoshis). A default setting will be used if not provided.
	Index        uint32      `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`                            // Optional. Index on which the fund is going to be split. Default: 0
	HasIndex     bool        `protobuf:"varint,4,opt,name=hasIndex,proto3" json:"hasIndex,omitempty"`                      // if true we will get the output by index, otherwise we fall back to a keycontext address lookup
	KeyContext   *KeyContext `protobuf:"bytes,5,opt,name=key_context,json=keyContext,proto3" json:"key_context,omitempty"` // Optional. If supplied and hasIndex is false we will read an address using keycontext, otherwise it will be checked from config.
	TxHex        string      `protobuf:"bytes,6,opt,name=tx_hex,json=txHex,proto3" json:"tx_hex,omitempty"`                // The tx containing the fund to split. Required except on regtest environment.
}

func (x *AddAndSplitFundRequest) Reset() {
	*x = AddAndSplitFundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAndSplitFundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAndSplitFundRequest) ProtoMessage() {}

func (x *AddAndSplitFundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAndSplitFundRequest.ProtoReflect.Descriptor instead.
func (*AddAndSplitFundRequest) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Do not use.
func (x *AddAndSplitFundRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *AddAndSplitFundRequest) GetDenomination() uint64 {
	if x != nil {
		return x.Denomination
	}
	return 0
}

func (x *AddAndSplitFundRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *AddAndSplitFundRequest) GetHasIndex() bool {
	if x != nil {
		return x.HasIndex
	}
	return false
}

func (x *AddAndSplitFundRequest) GetKeyContext() *KeyContext {
	if x != nil {
		return x.KeyContext
	}
	return nil
}

func (x *AddAndSplitFundRequest) GetTxHex() string {
	if x != nil {
		return x.TxHex
	}
	return ""
}

type AddAndSplitFundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionCount uint32   `protobuf:"varint,1,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
	OutputCount      uint32   `protobuf:"varint,2,opt,name=output_count,json=outputCount,proto3" json:"output_count,omitempty"`
	TotalValue       uint64   `protobuf:"varint,3,opt,name=total_value,json=totalValue,proto3" json:"total_value,omitempty"`
	ChangeTxid       string   `protobuf:"bytes,4,opt,name=change_txid,json=changeTxid,proto3" json:"change_txid,omitempty"`
	ChangeValue      uint64   `protobuf:"varint,5,opt,name=change_value,json=changeValue,proto3" json:"change_value,omitempty"`
	Warnings         []string `protobuf:"bytes,6,rep,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *AddAndSplitFundResponse) Reset() {
	*x = AddAndSplitFundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_funding_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAndSplitFundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAndSplitFundResponse) ProtoMessage() {}

func (x *AddAndSplitFundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_funding_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAndSplitFundResponse.ProtoReflect.Descriptor instead.
func (*AddAndSplitFundResponse) Descriptor() ([]byte, []int) {
	return file_funding_service_proto_rawDescGZIP(), []int{9}
}

func (x *AddAndSplitFundResponse) GetTransactionCount() uint32 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *AddAndSplitFundResponse) GetOutputCount() uint32 {
	if x != nil {
		return x.OutputCount
	}
	return 0
}

func (x *AddAndSplitFundResponse) GetTotalValue() uint64 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

func (x *AddAndSplitFundResponse) GetChangeTxid() string {
	if x != nil {
		return x.ChangeTxid
	}
	return ""
}

func (x *AddAndSplitFundResponse) GetChangeValue() uint64 {
	if x != nil {
		return x.ChangeValue
	}
	return 0
}

func (x *AddAndSplitFundResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

var File_funding_service_proto protoreflect.FileDescriptor

var file_funding_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a,
	0x66, 0x75, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6b, 0x65, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x6b, 0x65,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x31, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x46,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x75,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f,
	0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x32,
	0x70, 0x6b, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x32, 0x70, 0x6b, 0x68, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x32, 0x70, 0x6b, 0x68, 0x5f,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x69,
	0x6e, 0x50, 0x32, 0x70, 0x6b, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x0b,
	0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x22, 0xa3, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x75, 0x6e,
	0x64, 0x52, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x73, 0x74, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x61, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x64, 0x46, 0x65, 0x65, 0x50, 0x61,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70,
	0x61, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x46,
	0x65, 0x65, 0x50, 0x61, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x46,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74, 0x78, 0x22, 0x5a, 0x0a, 0x12, 0x53,
	0x70, 0x65, 0x6e, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x41,
	0x6e, 0x64, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x32, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x48, 0x65, 0x78, 0x22, 0xea, 0x01, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x78, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x32, 0xe9, 0x02, 0x0a, 0x0e, 0x46, 0x75, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x53,
	0x70, 0x65, 0x6e, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x6e,
	0x64, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x6e, 0x64, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46,
	0x75, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x41,
	0x6e, 0x64, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6e,
	0x64, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_funding_service_proto_rawDescOnce sync.Once
	file_funding_service_proto_rawDescData = file_funding_service_proto_rawDesc
)

func file_funding_service_proto_rawDescGZIP() []byte {
	file_funding_service_proto_rawDescOnce.Do(func() {
		file_funding_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_funding_service_proto_rawDescData)
	})
	return file_funding_service_proto_rawDescData
}

var file_funding_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_funding_service_proto_goTypes = []interface{}{
	(*GetBalanceRequest)(nil),       // 0: proto.GetBalanceRequest
	(*GetBalanceResponse)(nil),      // 1: proto.GetBalanceResponse
	(*AddFundRequest)(nil),          // 2: proto.AddFundRequest
	(*AddFundResponse)(nil),         // 3: proto.AddFundResponse
	(*GetFundsRequest)(nil),         // 4: proto.GetFundsRequest
	(*GetFundsResponse)(nil),        // 5: proto.GetFundsResponse
	(*SpendFundsRequest)(nil),       // 6: proto.SpendFundsRequest
	(*SpendFundsResponse)(nil),      // 7: proto.SpendFundsResponse
	(*AddAndSplitFundRequest)(nil),  // 8: proto.AddAndSplitFundRequest
	(*AddAndSplitFundResponse)(nil), // 9: proto.AddAndSplitFundResponse
	(*KeyContext)(nil),              // 10: proto.KeyContext
	(*Fund)(nil),                    // 11: proto.Fund
	(*Payment)(nil),                 // 12: proto.Payment
	(TransactionStatus)(0),          // 13: proto.TransactionStatus
}
var file_funding_service_proto_depIdxs = []int32{
	10, // 0: proto.GetBalanceRequest.key_context:type_name -> proto.KeyContext
	11, // 1: proto.AddFundRequest.fund:type_name -> proto.Fund
	10, // 2: proto.GetFundsRequest.key_context:type_name -> proto.KeyContext
	11, // 3: proto.GetFundsResponse.funds:type_name -> proto.Fund
	12, // 4: proto.GetFundsResponse.change:type_name -> proto.Payment
	13, // 5: proto.SpendFundsResponse.status:type_name -> proto.TransactionStatus
	10, // 6: proto.AddAndSplitFundRequest.key_context:type_name -> proto.KeyContext
	0,  // 7: proto.FundingService.GetBalance:input_type -> proto.GetBalanceRequest
	2,  // 8: proto.FundingService.AddFund:input_type -> proto.AddFundRequest
	4,  // 9: proto.FundingService.GetFunds:input_type -> proto.GetFundsRequest
	6,  // 10: proto.FundingService.SpendFunds:input_type -> proto.SpendFundsRequest
	8,  // 11: proto.FundingService.AddAndSplitFund:input_type -> proto.AddAndSplitFundRequest
	1,  // 12: proto.FundingService.GetBalance:output_type -> proto.GetBalanceResponse
	3,  // 13: proto.FundingService.AddFund:output_type -> proto.AddFundResponse
	5,  // 14: proto.FundingService.GetFunds:output_type -> proto.GetFundsResponse
	7,  // 15: proto.FundingService.SpendFunds:output_type -> proto.SpendFundsResponse
	9,  // 16: proto.FundingService.AddAndSplitFund:output_type -> proto.AddAndSplitFundResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_funding_service_proto_init() }
func file_funding_service_proto_init() {
	if File_funding_service_proto != nil {
		return
	}
	file_fund_proto_init()
	file_payment_proto_init()
	file_key_context_proto_init()
	file_broadcaster_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_funding_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpendFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpendFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAndSplitFundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_funding_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAndSplitFundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_funding_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_funding_service_proto_goTypes,
		DependencyIndexes: file_funding_service_proto_depIdxs,
		MessageInfos:      file_funding_service_proto_msgTypes,
	}.Build()
	File_funding_service_proto = out.File
	file_funding_service_proto_rawDesc = nil
	file_funding_service_proto_goTypes = nil
	file_funding_service_proto_depIdxs = nil
}
